# -*- coding:utf -8-
import Pygame
import random2

Start

#itinializing maze
	defining walls, corridor, starting point and ending point
	show the defined maze in Terminal

#import pygame

while maze == True:
	setting the size of the game window
		# must be square of 15 cases long
		my_maze = maze(15,15)
		pygame.init()
		pygame.display.set_mode(# size in pixels)
	place walls, MG and guard
	show the maze in user friendly window
	show objects in maze
		random choice #working with strings

#defining the directions (dir) of movement
	right = key "right"
	left = key "left"
	up = key "up"
	down = key "down"




#initializing classes:
	
	Class Maze:
   	 def __init__(self):
     	   self.walls = []
      	  self.start = []
      	 self.guard = []
       	 self.exit = []

        with open("laby.txt", "r") as laby:
            for y_axe, line in enumerate(laby):
                str = ""
                for x_axe, char in enumerate(line.strip('\n')):
                    coor = ((x_axe,y_axe))
                    if char == 'w':
                       self.walls.append(coor)
                    elif char == 's':
                        self.start.append(coor)
                    elif char == 'g':
                        self.guard.append(coor)
                    elif char == 'e':
                        self.exit.append(coor)
                    else:
                        pass
                    str = str + char
                print(str)


    def show(self):
        print(self.start)
laby = Maze()



	Class Hero:
		# Animation of MacGyver
			movements:
				# hero must move 1 case at the time and be controlled by player from the keyboard
				if dir == 'w':
					pass == Falce
					turn left or right
				elif dir == 's':
					exit # You win, game over
				else:
					#continue

			getting objects:
				# hero must get all three objects randomply places in maze
				counter = 0
				getting object
					placing on the object
					counter = counter + 1

			facing the guard:
				if counter == 3:
					gueard is killed
					# continue to the exit ('e')
				else:
					You've lost, game over !





	Class Object:
		# managing objects
		initializing the class
		defining fonction random choice to place objects in into the game
		#objects places in maze
		# MG arrived on object
			# Object has to disappear but added to the counter 

		
End

	
